import sys

# So the way that I understood this code was that the user input some number of username and passwords they
# would want to input and then all of those username and passwords would work no matter the combination.
# It's just how I understood the project.
#
# These are the variables that are used throughout the program, not including some of the weird ones that I
# embedded within a while loop near the bottom

dict= {}
username = []
password = []
count = 1
tries = 0

print("ENTER HOW MANY USERNAME AND PASSWORDS YOU WANT TO ADD TO COMPUTER:", end=' ')
amount = int(input())

# This is the first while loop of many that takes the amount of username and passwords the person
# wants to enter and, as expected, has them enter that many usernames and passwords. The thing about it though
# is that it stores the usernames and passwords that are inputted as a list, which as you know
# needs to actually be a dictionary.

while amount > 0:
    print("\nPLEASE ENTER USERNAME", str(count) + ':', end=' ')
    username = username + [input()]
    print("\nPLEASE ENTER PASSWORD", str(count) + ':', end=' ')
    password = password + [input()]
    amount -= 1
    count += 1

# This is where the list turn into a dictionary. Using two for loops that turn the list username into the
# variable key and the list password into the variable value. I did this because it emulates
# the actual terminology of dictionaries and I thought it would be cool

for key in username:
    for value in password:
        dict[key] = value
        password.remove(value)
        break

# here is where the second part of the code is. What it is doing is setting a while loop that is equal to ~100 trillion
# tries, so I hope you dont mess up that much. It taking in a new username and password from the user
# and creating a new dictionary that will then be compared to the old dictionary to see if the password is
# 'correct'

print("\nTRY GETTING IN, IF YOU TYPE THE WRONG PASSWORD YOU WILL HAVE TO TRY AGAIN")
while tries < 999999999999999999999:
    if tries >= 1:
        print("\nWRONG PASSWORD TRY AGAIN.")
        pass
    else:
        pass

# I have these variables here so that whenever the whole loop starts up again it resets the dicitonary and the lists
# back to nothing

    newdict = {}
    username2 = []
    password2 = []

    print("\nPLEASE ENTER USERNAME")
    username2 = username2 + [input()]
    print("PLEASE ENTER PASSWORD")
    password2 = password2 + [input()]
    for key2 in username2:
        for value2 in password2:
            newdict[key2] = value2
            break
# This is the part of the code that actually compares the two dictionaries to see if they are the same.
# All it is doing it seeing if dict[i] is equal to to newdict[i] and if it is it will pop out true and boom
# you are in. If it sees that it is false and they are not equal it will come out negative, and you
# will have to try again."""

    for i in dict.items():
        if i in newdict.items():
           sys.exit("\nYOU'RE IN... WELCOME TO YOUR COMPUTER")
        else:
            continue

# This tries += 1 is actually kind of important because it will only run if it is false
# and if you look  up to the part where the user inputs the second set of username and passwords
# if tries is > 0 then it will print 'please try again...'

    tries += 1
